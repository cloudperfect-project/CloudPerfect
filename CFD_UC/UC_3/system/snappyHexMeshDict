/*--------------------------------*- C++ -*----------------------------------*\n| =========                 |                                                 |
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \    /   O peration     | Version:  2.3.0                                 |
|   \  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \/     M anipulation  |                                                 |
*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       true;


// Geometry. Definition of all surfaces. All surfaces are of class
// searchableSurface.
// Surfaces are used
// - to specify refinement for any mesh cell intersecting it
// - to specify refinement for any mesh cell inside/outside/near
// - to 'snap' the mesh boundary to the surface
geometry
{

	BIN0500_ext_volume-Inlet.stl
	{
		type triSurfaceMesh;
		name GEO_inlet;
	}
	BOUT0500_CMF_ext_volume-Outlet.stl
	{
		type triSurfaceMesh;
		name GEO_outlet;
	}
	BREF0500_CMF_ext_volume-Extraction.stl
	{
		type triSurfaceMesh;
		name GEO_pressure_reference;
	}

	CMF_ext_volume-Door.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-Door;
	}
	CMF_ext_volume-Floor.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-Floor;
	}
	CMF_ext_volume-Walls_Ceil.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-Walls_Ceil;
	}
	GEOM0502_CMF_ext_volume-Alimentation.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-Alimentation;
	}
	GEOM0502_CMF_ext_volume-Alimentation_tole.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-Alimentation_tole;
	}
	GEOM0602_CMF_ext_volume-HeaterCore.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-HeaterCore;
	}
	GEOM0602_CMF_ext_volume-HVAC_external.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-HVAC_external;
	}

	GEOM0602_CMF_ext_volume-HVAC_grid.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-HVAC_grid;
	}
	GEOM0602_CMF_ext_volume-HVAC_internal.stl
	{
		type triSurfaceMesh;
		name CMF_ext_volume-HVAC_internal;
	}
	VPMS0600_CMF_ext_volume-Filter.stl
	{
		type triSurfaceMesh;
		name Filter;
	}
	VPMS0600_CMF_ext_volume-Evapo.stl
	{
		type triSurfaceMesh;
		name Evapo;
	}
	VRES0500_CMF_ext_volume-Alim_InletHVAC.stl
	{
		type triSurfaceMesh;
	}
	VRES0600_ext_volume_HVAC_Micros.stl
	{
		type triSurfaceMesh;
	}

};



// Settings for the castellatedMesh generation.
castellatedMeshControls
{

    // Refinement parameters
    // ~~~~~~~~~~~~~~~~~~~~~

    // If local number of cells is >= maxLocalCells on any processor
    // switches from from refinement followed by balancing
    // (current method) to (weighted) balancing before refinement.
    maxLocalCells 300000000;

    // Overall cell limit (approximately). Refinement will stop immediately
    // upon reaching this number so a refinement level might not complete.
    // Note that this is the number of cells before removing the part which
    // is not 'visible' from the keepPoint. The final number of cells might
    // actually be a lot less.
    maxGlobalCells 300000000;

    // The surface refinement loop might spend lots of iterations refining just a
    // few cells. This setting will cause refinement to stop if <= minimumRefine
    // are selected for refinement. Note: it will at least do one iteration
    // (unless the number of cells to refine is 0)
    minRefinementCells 50;

    // Allow a certain level of imbalance during refining
    // (since balancing is quite expensive)
    // Expressed as fraction of perfect balance (= overall number of cells /
    // nProcs). 0=balance always.
    maxLoadUnbalance 0.10;


    // Number of buffer layers between different levels.
    // 1 means normal 2:1 refinement restriction, larger means slower
    // refinement.
    nCellsBetweenLevels 4;



    // Explicit feature edge refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    // Specifies a level for any cell intersected by its edges.
    // This is a featureEdgeMesh, read from constant/triSurface for now.
    features
    (
/*
        {
            file "WaterBox_fins.eMesh";
            level 6;
        }*/
    );



    // Surface based refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~

    // Specifies two levels for every surface. The first is the minimum level,
    // every cell intersecting a surface gets refined up to the minimum level.
    // The second level is the maximum level. Cells that 'see' multiple
    // intersections where the intersections make an
    // angle > resolveFeatureAngle get refined up to the maximum level.

    refinementSurfaces
    {

	Filter
	{
	faceZone air_filter;
	cellZone air_filter;
	cellZoneInside inside;
	level (5 5);
	}
	Evapo
	{
	faceZone evapo;
	cellZone evapo;
	cellZoneInside inside;
	level (5 5);
	}
	

	CMF_ext_volume-Door
	    {
		level (1 1);
	    }
	CMF_ext_volume-Floor
	    {
		level (1 1);
	    }
	CMF_ext_volume-Walls_Ceil
	    {
		level (1 1);
	    }
	CMF_ext_volume-Alimentation
	    {
		level (4 4);
	    }
	CMF_ext_volume-Alimentation_tole
	    {
		level (4 4);
	    }
	CMF_ext_volume-HeaterCore
	    {
		level (5 5);
	    }
	CMF_ext_volume-HVAC_external
	    {
		level (5 5);
	    }
	CMF_ext_volume-HVAC_grid
	    {
		level (5 5);
	    }
	CMF_ext_volume-HVAC_internal
	    {
		level (5 5);
	    }
	GEO_inlet
	{
		level (4 4);
	}
	GEO_outlet
	{
		level (4 4);
	}
	GEO_pressure_reference
	{
		level (4 4);
	}

       
    }

    // Resolve sharp angles
    resolveFeatureAngle 30; //base value: 30
    planarAngle 30;


    // Region-wise refinement
    // ~~~~~~~~~~~~~~~~~~~~~~

    // Specifies refinement level for cells in relation to a surface. One of
    // three modes
    // - distance. 'levels' specifies per distance to the surface the
    //   wanted refinement level. The distances need to be specified in
    //   descending order.
    // - inside. 'levels' is only one entry and only the level is used. All
    //   cells inside the surface get refined up to the level. The surface
    //   needs to be closed for this to be possible.
    // - outside. Same but cells outside.

    refinementRegions
    {
	VRES0500_CMF_ext_volume-Alim_InletHVAC.stl
	{
	  mode inside;
          levels ((4 4));
	}
	VRES0600_ext_volume_HVAC_Micros.stl
	{
	  mode inside;
          levels ((5 5));
	}
    }


    // Mesh selection
    // ~~~~~~~~~~~~~~

    // After refinement patches get added for all refinementSurfaces and
    // all cells intersecting the surfaces get put into these patches. The
    // section reachable from the locationInMesh is kept.
    // NOTE: This point should never be on a face, always inside a cell, even
    // after refinement.
    locationInMesh (1.5 0 1.5);


    // Whether any faceZones (as specified in the refinementSurfaces)
    // are only on the boundary of corresponding cellZones or also allow
    // free-standing zone faces. Not used if there are no faceZones.
    allowFreeStandingZoneFaces true;
}



// Settings for the snapping.
snapControls
{
    //- Number of patch smoothing iterations before finding correspondence
    //  to surface
    nSmoothPatch 10;

    //- Relative distance for points to be attracted by surface feature point
    //  or edge. True distance is this factor times local
    //  maximum edge length.
    tolerance 4.0; //base:2

    //- Number of mesh displacement relaxation iterations.
    nSolveIter 30;

    //- Maximum number of snapping relaxation iterations. Should stop
    //  before upon reaching a correct mesh.
    nRelaxIter 5;

    // Feature snapping

        //- Number of feature edge snapping iterations.
        //  Leave out altogether to disable.
        nFeatureSnapIter 50; //default: 10

        //- Detect (geometric only) features by sampling the surface
        //  (default=false).
        implicitFeatureSnap true;

        //- Use castellatedMeshControls::features (default = true)
        explicitFeatureSnap false; //usa i valori estratti dall'operazione preliminare

        //- Detect points on multiple surfaces (only for explicitFeatureSnap)
        multiRegionFeatureSnap false;
}



// Settings for the layer addition.
addLayersControls
{
    // Are the thickness parameters below relative to the undistorted
    // size of the refined cell outside layer (true) or absolute sizes (false).
    relativeSizes true;

    // Per final patch (so not geometry!) the layer information
    layers
    {
	/*CMF_ext_volume-Door
	    {
	       nSurfaceLayers 2;
	    }
	CMF_ext_volume-Floor
	    {
	       nSurfaceLayers 2;
	    }
	CMF_ext_volume-Walls_Ceil
	    {
	       nSurfaceLayers 2;
	    }*/
	CMF_ext_volume-Alimentation
	    {
	       nSurfaceLayers 2;
	    }
	CMF_ext_volume-Alimentation_tole
	    {
	       nSurfaceLayers 2;
	    }
	CMF_ext_volume-HeaterCore
	    {
	       nSurfaceLayers 2;
	    }
	CMF_ext_volume-HVAC_external
	    {
	       nSurfaceLayers 2;
	    }
	CMF_ext_volume-HVAC_grid
	    {
	       nSurfaceLayers 2;
	    }
	CMF_ext_volume-HVAC_internal
	    {
	       nSurfaceLayers 2;
	    }
    }

    // Expansion factor for layer mesh
    expansionRatio 1.15;

    // Wanted thickness of final added cell layer. If multiple layers
    // is the
    // thickness of the layer furthest away from the wall.
    // Relative to undistorted size of cell outside layer.
    // is the thickness of the layer furthest away from the wall.
    // See relativeSizes parameter.
    finalLayerThickness 0.3;

    // Minimum thickness of cell layer. If for any reason layer
    // cannot be above minThickness do not add layer.
    // Relative to undistorted size of cell outside layer.
    minThickness 0.05;

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
    nGrow 0; //base: 0

    // Advanced settings

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle 130; //base: 60

    // At non-patched sides allow mesh to slip if extrusion direction makes
    // angle larger than slipFeatureAngle.
    slipFeatureAngle 30;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 5;

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals 10;

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals 10;

    // Smooth layer thickness over surface patches
    nSmoothThickness 10;

    // Stop layer growth on highly warped cells
    maxFaceThicknessRatio 0.4;

    // Reduce layer growth where ratio thickness to medial
    // distance is large
    maxThicknessToMedialRatio 0.3;

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
    minMedianAxisAngle 90;

    nMedialAxisIter 8;


    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude 0;


    // Overall max number of layer addition iterations. The mesher will exit
    // if it reaches this number of iterations; possibly with an illegal
    // mesh.
    nLayerIter 50;

    nRelaxedIter 20;
    additionalReporting true;
}



// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    #include "meshQualityDict"

    relaxed
    {
        maxNonOrtho 75;
    }
    // Advanced

    //- Number of error distribution iterations
    nSmoothScale 4;
    //- amount to scale back displacement at error points
    errorReduction 0.75;
}

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;


// ************************************************************************* //
